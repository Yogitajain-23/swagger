openapi: 3.0.3
info:
  title: Ti-detection Server
  description: The TI detection attack server, a.k.a. the silverback server provides REST APIs that execute DNS based malware attacks.The server acts as a `Blox1Endpoint client` that sends various DNS requests to a B1TD NS resolver. If such an endpoint is not available, the silverback server will create it using the credentials of a registered B1TD account. All the APIs provided by the silverback server expect the email and password of the account for which the DNS attack is performed. If a Blox1Endpoint for the account used in API request is known to the server, it will be reused. Otherwise, a new Blox1Endpint will be created on the B1TD resolver using the provided account.
  
  
    This silverback server also use `External Networks`,When running DNS based malware attacks, provide the external network in request body to perform attacks. If the external network is not mapped to the CSP, ti-detection server will perform the mapping for you and then later try the attack after few seconds against the same external_network. Name of network while creating the external network through ti-detection server will be based on the account's name against which we are performing attacks.
    
  contact: {}
  version: 1.0.11
externalDocs:
  description: "The DGA Families's DNS SLDs are generated using various modules from baderj/domain_generation_algorithms"
  url:  https://github.com/baderj/domain_generation_algorithms
tags:
  - name: DEX
    description: Data Exfiltration
  - name: DGA
    description: DGA Families
  - name: CSP_API
    description: CSP APIs
paths:
  /api/dex/dexattack:
    post:
      tags:
        - DEX
      summary: Data Exfiltration Attack
      description: Request for performing data(text or file) exfiltration attack. Use `exfiltrationType` as `text` for Text Exfiltration and for File Exfiltration use `exfiltrationType` as `file as file`.
      operationId: text
      requestBody:
        description: Request for Performing Data Exfiltration Attack.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextExfiltrationParams'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNSTApiResponse'          
        '400':
          description: Bad request
        '500':
          description: Internal Server Error 
  /api/dgaattack/zloader :
    post:
      tags:
        - DGA
      summary: DGA Zloader Attack
      description: Perform DGA Zloader Attack.
      externalDocs:
        description: "`zloader information`"
        url: https://johannesbader.ch/blog/the-dga-of-zloader/
      operationId: zloader
      requestBody:
        description: Request for performing zloader attack
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZloaderRequestParams'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DGAApiResponse'          
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error   
  /api/dgaattack/ramnit :        
    post:
      tags:
        - DGA
      summary: DGA Ramnit Attack
      description: Perform DGA Ramnit Attack
      externalDocs:
        description: "`ramnit information`"
        url: https://johannesbader.ch/2014/12/the-dga-of-ramnit/
      operationId: ramnit
      requestBody:
        description: Request for dga ramnit 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RamnitRequestParams'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DGAApiResponse'          
        '400':
          description: Bad request  
        '500':
          description: Internal Server Error 
  /api/dgaattack/mylobot :           
    post:
      tags:
        - DGA
      summary: DGA Mylobot Attack
      description: Perform DGA Mylobot Attack
      externalDocs:
        description: "`mylobot information`"
        url: https://github.com/Infoblox-CTO/poseidon.detections/blob/main/resource/specs/dga_mylobot.yaml
      operationId: mylobot
      requestBody:
        description: Request for dga mylobot 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyLobotRequestParams'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DGAApiResponse'          
        '400':
          description: Bad request  
        '500':
          description: Internal Server Error 
  /api/dgaattack/suppobox :           
    post:
      tags:
        - DGA
      summary: DGA Suppobox Attack
      description: Perform DGA Suppobox Attack
      externalDocs:
        description: "`suppobox information`"
        url: http://www.rsaconference.com/writable/presentations/file_upload/br-r01-end-to-end-analysis-of-a-domain-generating-algorithm-malware-family.pdf
      operationId: suppobox
      requestBody:
        description: Request for dga suppobox
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuppoboxRequestParams'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DGAApiResponse'          
        '400':
          description: Bad request  
        '500':
          description: Internal Server Error 
  /api/dgaattack/qsnatch-a:
    post:
      tags:
        - DGA
      summary: DGA Qsnatch-A Attack
      description: Perform DGA Qsnatch-A Attack
      externalDocs:
        description: "`qsnatch-a information`"
        url: https://johannesbader.ch/blog/the-dga-of-qsnatch/
      operationId: qsnatch-a
      requestBody:
        description: Request for dga qsnatch-a
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QsnatchARequestParams'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DGAApiResponse'          
        '400':
          description: Bad request  
        '500':
          description: Internal Server Error 
  /api/dgaattack/qsnatch-b:
    post:
      tags:
        - DGA
      summary: DGA Qsnatch-B Attack
      description: Perform DGA Qsnatch-B Attack
      externalDocs:
        description: "`qsnatch-b information`"
        url: https://johannesbader.ch/blog/the-dga-of-qsnatch/
      operationId: qsnatch-b
      requestBody:
        description: Request for dga qsnatch-b
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QsnatchBRequestParams'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DGAApiResponse'          
        '400':
          description: Bad request  
        '500':
          description: Internal Server Error 
  /api/dgaattack/gameover:
    post:
      tags:
        - DGA
      summary: DGA Gameover Attack
      description: Perform DGA Gameover Attack
      externalDocs:
        description: "`gameover information`"
        url: https://bin.re/blog/the-dga-of-newgoz/
      operationId: gameover
      requestBody:
        description: Request for dga gameover
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameoverRequestParams'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DGAApiResponse'          
        '400':
          description: Bad request  
        '500':
          description: Internal Server Error 
  /api/dgaattack/emotet:
    post:
      tags:
        - DGA
      summary: DGA Emotet Attack
      description: Perform DGA Emotet Attack
      externalDocs:
        description: "`emotet information`"
        url: https://github.com/Infoblox-CTO/poseidon.detections/blob/main/resource/specs/dga_unknown_1000.yaml
      operationId: emotet
      requestBody:
        description: Request for dga emotet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmotetRequestParams'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DGAApiResponse'          
        '400':
          description: Bad request  
        '500':
          description: Internal Server Error  
  /api/dgaattack/tinba:
    post:
      tags:
        - DGA
      summary: DGA Tinba Attack
      description: Perform DGA Tinba Attack
      externalDocs:
        description: "`tinba information`"
        url: https://bin.re/blog/new-top-level-domains-for-tinbas-dga/
      operationId: tinba
      requestBody:
        description: Request for dga tinba
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TinbaRequestParams'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DGAApiResponse'  
        '400':
          description: Bad request  
        '500':
          description: Internal Server Error   
  /api/create_endpoint:
    post:
      tags:
        - CSP_API
      summary: Create a simulated Blox1Endpoint
      description: This API creates a simulated Blox1Endpoint on the CSP. One can then use the Blox1Endpoint when sending DNS attack requests. The CSP reports will show the Blox1Endpoint as the source of the DNS requests.
      operationId: endpoint
      requestBody:
        description: Request for creating Blox1Endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointRequestParams'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request  
        '500':
          description: Internal Server Error   
  /api/create_external_network:
    post:
      tags:
        - CSP_API
      summary: Create a External Network on the CSP.
      description: This API created a External Network on the CSP.One can then use the external network when sending DNS attack requests. The CSP reports will show thw External Network as the source of DNS requests.
      operationId: external network creation
      requestBody:
        description: Request for creating External Network
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalNetworkRequestParams'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request  
        '500':
          description: Internal Server Error        
components:
  schemas:
    TextExfiltrationParams:
      required:
        - domain
        - chunkSize
        - exfiltrationType
        - dexText
        - account
      properties:
        queryType:
          type: string
          example: "A"
          description: "Enter the Query type"
        dnsServer:
          type: string
          example: "185.173.184.212:53"
          description: "IP of DNS resolver"
        env: 
          type: string
          example: "env-2a"
          description: "Environment,in which attack will get perform. Default : `env-2a`"
        account:
          type: string
          example: "agowtham15@infoblox.site"
          description: "CSP account used for sending the attack queries"
        external_network:
          type: string
          example: "101.20.23.205/32"
          description: "Use external_network to perform attack"  
        chunkSize:
          type: integer
          format: int
          example: 27
          description: "Size to break data into chunks"
        exfiltrationType:
          type: string
          example: "text"
          description: "Data to do the text exfiltration"
        domain:
          type: string
          example: "some domain name"
          description: "Domain name"
        dexText:
          $ref: '#/components/schemas/TextExfiltration'  
    FileExfiltrationParams:
      required:
        - domain
        - chunkSize
        - exfiltrationType
        - dexFile
        - account
      properties:
        queryType:
          type: string
          example: "A"
          description: "Enter the Query type"
        dnsServer:
          type: string
          example: "185.173.184.212:53"
          description: "IP of DNS resolver"
        env: 
          type: string
          example: "env-2a"
          description: "Environment,in which attack will get perform. Default : `env-2a`"
        account:
          type: string
          example: "agowtham15@infoblox.site"
          description: "CSP account used for sending the attack queries"
        chunkSize:
          type: integer
          format: int
          example: 27
          description: "Size to break data into chunks"
        exfiltrationType:
          type: string
          example: "file as file"
          description: "Data to do the file exfiltration"
        domain:
          type: string
          example: "some domain name"
          description: "Domain name"
        dexFile:
          $ref: '#/components/schemas/FileExfiltration'        
    ZloaderRequestParams:
      required:
        - dgaZloaderParams
        - account
      properties:
        queryType:
          type: string
          example: "A"
          description: "Enter the Query type"
        dnsServer:
          type: string
          example: "185.173.184.212:53"
          description: "IP of DNS resolver"
        external_network:
          type: string
          example: "101.20.23.205/32"
          description: "Use external_network to perform attack"  
        env: 
          type: string
          example: "env-2a"
          description: "Environment,in which attack will get perform. Default : `env-2a`"
        account:
          type: string
          example: "agowtham15@infoblox.site"
          description: "CSP account used for sending the attack queries"
        queriesCount:
          type: integer
          format: int
          example: 6
          description: "Provide number of queries to send attack, default : `6`"
        executeManually:
          type: boolean
          example: false
          description: "Use `true` to execute manually"
        dgaZloaderParams:
          $ref: '#/components/schemas/Zloader'  
    RamnitRequestParams: 
      required:
        - dgaRamnitParams
        - account
      properties:
        queryType:
          type: string
          example: "A"
          description: "Enter the Query type"
        dnsServer:
          type: string
          example: "185.173.184.212:53"
          description: "IP of DNS resolver"
        env: 
          type: string
          example: "env-2a"
          description: "Environment,in which attack will get perform. Default : `env-2a`"
        account:
          type: string
          example: "agowtham15@infoblox.site"
          description: "CSP account used for sending the attack queries"
        queriesCount:
          type: integer
          format: int
          example: 6
          description: "Provide number of queries to send ramnit attack,default : `6`"
        executeManually:
          type: boolean
          example: false
          description: "Use `true` to execute manually"
        dgaRamnitParams:
          $ref: '#/components/schemas/Ramnit'  
    MyLobotRequestParams:
      required:
        -  dgaMyLobotParams
      properties:
        queryType:
          type: string
          example: "A"
          description: "Enter the Query type"
        dnsServer:
          type: string
          example: "185.173.184.212:53"
          description: "IP of DNS resolver"
        env: 
          type: string
          example: "env-2a"
          description: "Environment,in which attack will get perform. Default : `env-2a`"
        account:
          type: string
          example: "agowtham15@infoblox.site"
          description: "CSP account used for sending the attack queries"
        queriesCount:
          type: integer
          format: int
          example: 6
          description: "Provide number of queries to send suppobox attack, default : `6`"
        executeManually:
          type: boolean
          example: false  
          description: "Use `true` to execute manually"
        dgaMyLobotParams:
          $ref: '#/components/schemas/MyLobot'          
    SuppoboxRequestParams:
      required:
        - dgaSuppoboxParams
        - account
      properties:
        queryType:
          type: string
          example: "A"
          description: "Enter the Query type"
        dnsServer:
          type: string
          example: "185.173.184.212:53"
          description: "IP of DNS resolver"
        external_network:
          type: string
          example: "101.20.23.205/32"
          description: "Use external_network to perform attack"
        env: 
          type: string
          example: "env-2a"
          description: "Environment,in which attack will get perform. Default : `env-2a`"
        account:
          type: string
          example: "agowtham15@infoblox.site"
          description: "CSP account used for sending the attack queries"
        queriesCount:
          type: integer
          format: int
          example: 6
          description: "Provide number of queries to send suppobox attack, default : `6`"
        executeManually:
          type: boolean
          example: false  
          description: "Use `true` to execute manually"
        dgaSuppoboxParams:
          $ref: '#/components/schemas/Suppobox'    
    QsnatchARequestParams:
      required:
        - dgaQsnatchVersionAParams
        - account
      properties:
        queryType:
          type: string
          example: "A"
          description: "Enter the Query type"
        dnsServer:
          type: string
          example: "185.173.184.212:53"
          description: "IP of DNS resolver"
        env: 
          type: string
          example: "env-2a"
          description: "Environment,in which attack will get perform. Default : `env-2a`"
        account:
          type: string
          example: "agowtham15@infoblox.site"
          description: "CSP account used for sending the attack queries"
        queriesCount:
          type: integer
          format: int
          example: 6
          description: "Provide number of queries to send qsnatch-a attack, default : `6`"
        executeManually:
          type: boolean
          example: false  
          description: "Use `true` to execute manually"
        dgaQsnatchVersionAParams:
          $ref: '#/components/schemas/QsnatchA'   
    QsnatchBRequestParams:
      required:
        - dgaQsnatchVersionBParams
        - account
      properties:
        queryType:
          type: string
          example: "A"
          description: "Enter the Query type"
        dnsServer:
          type: string
          example: "185.173.184.212:53"
          description: "IP of DNS resolver"
        env: 
          type: string
          example: "env-2a"
          description: "Environment,in which attack will get perform. Default : `env-2a`"
        account:
          type: string
          example: "agowtham15@infoblox.site"
          description: "CSP account used for sending the attack queries"
        queriesCount:
          type: integer
          format: int
          example: 6
          description: "Provide number of queries to send qsnatch-b attack, default : `6`"
        executeManually:
          type: boolean
          example: false
          description: "Use `true` to execute manually"
        dgaQsnatchVersionBParams:
          $ref: '#/components/schemas/QsnatchB'   
    GameoverRequestParams:
      required:
        - dgaGameOverParams
        - account
      properties:
        queryType:
          type: string
          example: "A"
          description: "Enter the Query type"
        dnsServer:
          type: string
          example: "185.173.184.212:53"
          description: "IP of DNS resolver"
        env: 
          type: string
          example: "env-2a"
          description: "Environment,in which attack will get perform. Default : `env-2a`"
        account:
          type: string
          example: "agowtham15@infoblox.site"
          description: "CSP account used for sending the attack queries"
        queriesCount:
          type: integer
          format: int
          example: 6
          description: "Provide number of queries to send gameover attack, default : `6`"
        executeManually:
          type: boolean
          example: false
          description: "Use `true` to execute manually"
        dgaGameOverParams:
          $ref: '#/components/schemas/Gameover'  
    EmotetRequestParams:
      required:
        - dgaEmotetParams
        - account
      properties:
        queryType:
          type: string
          example: "A"
          description: "Enter the Query type"
        dnsServer:
          type: string
          example: "185.173.184.212:53"
          description: "IP of DNS resolver"
        env: 
          type: string
          example: "env-2a"
          description: "Environment,in which attack will get perform. Default : `env-2a`"
        account:
          type: string
          example: "agowtham15@infoblox.site"
          description: "CSP account used for sending the attack queries"
        queriesCount:
          type: integer
          format: int
          example: 6
          description: "Provide number of queries to send emotet attack, default : `6`"
        executeManually:
          type: boolean
          example: false
          description: "Use `true` to execute manually"
    TinbaRequestParams:
      required:
        - dgaTinbaParams
        - account
      properties:
        queryType:
          type: string
          example: "A"
          description: "Enter the Query type"
        dnsServer:
          type: string
          example: "185.173.184.212:53"
          description: "IP of DNS resolver"
        env: 
          type: string
          example: "env-2a"
          description: "Environment,in which attack will get perform. Default : `env-2a`"
        account:
          type: string
          example: "agowtham15@infoblox.site"
          description: "CSP account used for sending the attack queries"
        queriesCount:
          type: integer
          format: int
          example: 6
          description: "Provide number of queries to send tinba attack, default : `6`"
        executeManually:
          type: boolean
          example: false
          description: "Use `true` to execute manually"
        dgaTinbaParams:
          $ref: '#/components/schemas/Tinba'   
    EndpointRequestParams:
      required:
        - account
        - endpoint
      properties:
        account:
          type: string
          example: "agowtham15@infoblox.site"
          description: "Account against which we want to create endpoint"
        env: 
          type: string
          example: "env-2a"
          description: "Environment in which you want to create endpoint"
        endpoint:
          $ref: '#/components/schemas/Endpoint'
    ExternalNetworkRequestParams:
      required:
        - account
        - name
        - items
      properties:
        account:
          type: string
          example: "agowtham15@infoblox.site"
          description: "Account against which we want to create endpoint"
        env: 
          type: string
          example: "env-2a"
          description: "Environment in which you want to create endpoint"
        name:
          type: string
          example: "Name-of-external-network"
          description: "Provide the name of external network"
        items: 
          type: array
          items:
            type: string
          example: ["100.20.30.22/32"]
    TextExfiltration:
      required:
        - text
      type: object   
      properties:
        text: 
          type: string
          example : "Data to Exfiltration"
          description: "Provide the data that you want to exfiltrate"
    FileExfiltration:
      required:
        - fileName
        - fileType
        - noOflinesInFile
        - noOfWordsInALine
      type: object  
      properties:
        fileName:
          type: string
          example: "test"
          description: "Provide the name of file"
        fileType:
          type: string
          example: "txt"
          description: "Provide the type of file"
        noOflinesInFile:
          type: integer
          format: int
          example: 20
          description: "Provide the no. of lines to be in file, `should be >=10`"
        noOfWordsInALine:
          type: integer
          format: int
          example: 10
          description: "Provide the no. of words to be in each line"
    Zloader:
      type: object
      properties:
        date:
          type: string
          example: "2023-01-01"
          description: "Date to generate slds for zloader,`format : %Y-%m-%d`"
        rc4Key:
          type: string
          example: "q23Cud3xsNf3"
          description: "rc4Key to generate zloader domains, default : `q23Cud3xsNf3`"
    Ramnit:
      type: object
      properties:
        seed:
          type: string
          example: "ABCDE123"
          description: "Provide Seed(hex number) to generate slds for ramnit"
        knownSeed:
          type: boolean
          example: "q23Cud3xsNf3"
          description: "Provide `true` to use known seeds"
        tlds:
          type: string
          example: "com"
          description: "Provide tlds to form slds for ramnit, options are : `['click', 'com', 'eu', 'bid']`"
        min:
          type: integer
          format: int
          example: 11
          description: "Provide Minimum length for slds of ramnit,default : `11`"
        max:  
          type: integer
          format: int
          example: 25
          description: "Provide Maximum length for slds of ramnit,default : `25`"
    Suppobox:
      type: object
      properties: 
        chooseWordFile:
          type: integer
          format: int
          example: 1
          description: "Choose Word file to generate slds for suppobox. Value can be `[1,2,3]`"
        date:
          type: string
          example: "2022-12-10 00:00:00"
          description: "Date to generate slds for suppobox, `format : %Y-%m-%d %H:%M:%S`"
        domainsToIgnore:
          type: string
          example: "thinkspring.net"
          description: "Provide domain to ignore it while generating slds for suppobox"
        ignoreDomains:
          type: string
          example: "thinkspring.net"
          description: "Domains which are to be ignore"
    MyLobot:
      required:
        - sldLength
      type: object
      properties: 
        domainsToIgnore:
          type: string
          example: "thinkspring.net"
          description: "These domains must not be used for mylobot attacks. If such a domain is generated by the DGA, it will be discarded from the list of attack queries." 
        sldLength:
          type: integer
          format: int
          example: 7
          description: "Length of slds for mylobot must be `7`"    
    QsnatchA:
      type: object
      properties:
        date: 
          type: string
          example: "2019-11-11 18:00:00"
          description: "Date to generate slds for qsnatch version A, `format : %Y-%M-%D %H:%M:%S`"  
    QsnatchB:
      type: object
      properties:
        date: 
          type: string
          example: "2019-11-11 18:00:00"
          description: "Date to generate slds for qsnatch version B, `format : %Y-%M-%D %H:%M:%S`"
        tlds:
          type: string
          example: "com"
          description: "Provide tlds to form slds for qsnatch-b, options are : `[zw, name, mu, zm, ac, il, mx, jp, net, men, org, li, es, so, re, top, lv, cd, eg, sx, cx, pm, za, by, fr, tr, gu, uy, fm, gl, ls, ug, py, az, today, ae, am, mo, tv, gg, ly, ax, my, to, fk, qa, pk, su, pf, info, cm, ps, bt, kr, aq, cy, al, me, fi, ke, ve, cc, ag, pa, de, dz, eu, km, md, ro, pro, ml, bz, com, vu, ge, pe, lr, gd, tw, sc, ee, sg, bm, tk, lk, gq, netcn, cz, vg, nu, biz, ai, hk, wf, mobi, in, ch, cf, kn, id, bg, rs,ws, uz, th, ga,rocks, fj, tl, xyz, lb, bs, ec, ua, vn, co, kh, ck, lc, la, do, cn, nr, ru, kg, pw, af, hm, je, se, gy, cw, tt, ar, sv, ng, nl, br]`"
        min:
          type: integer
          format: int
          example: 9
          description: "Provide Minimum length for slds of qsnatch-b,default : `9`"
        max:  
          type: integer
          format: int
          example: 25
          description: "Provide Maximum length for slds of qsnatch-b,default : `14`"
    Gameover:
      type: object
      properties:    
        date: 
          type: string
          example: "2019-11-11"
          description: "Date to generate slds for gameover,`format : %Y-%m-%d`"
    Tinba:
      type: object
      properties:
        seed: 
          type: string
          example : "jc74FlUna852Ji9o"
          description: "Provide seed to generate slds for tinba. default : `jc74FlUna852Ji9o` and  options are `['oGkS3w3sGGOGG7oc','jc74FlUna852Ji9o','yqokqFC2TPBFfJcG', 'j193HsnW72Yqns7u']`"
    Endpoint:
      type: object
      properties:
        user_id: 
          type: string
          example: "ti-detection"
        device_info:
          type: string
          example: "ti-detection-dummy-endpoint"
        os_platform: 
          type: string
          example: "Windows 8 Enterprise"
        version: 
          type: string
          example: "2.2.0"
        net_info: 
          $ref: '#/components/schemas/NetInfo'
    NetInfo:
      type: object
      properties:
        fqdn:
          type: string
          example: "B1E Endpoint For TI Detection"
        mac_addr:
          type: array
          items:
            type: string
          example: ["51:64:45:b8:07:45"]
        ipv4_addr_list: 
          type: array
          items:
            type: string
          example: ["192.168.0.1"]
        state:
          $ref: '#/components/schemas/State'
    State:
      type: object
      properties:
        protection:
          type: string
          example: "PENDING_ACCOUNT_CHECK"
        upgrade: 
          type: string
          example: "NO_OPERATION"
    DGAQueriesResponse:
      properties:
        queries:
          type: string
          example: "rggjtkxdktpeegiohcwj.com."
          description: "Query to perform the attack"
        response:
          type: string
          example: ";; opcode: QUERY, status: NXDOMAIN, id: 0\n;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version 0; flags: ; udp: 4096\n\n;; QUESTION SECTION:\n;rggjtkxdktpeegiohcwj.com.\tIN\t A\n\n;; AUTHORITY SECTION:\ncom.\t0\tIN\tSOA\ta.gtld-servers.net. nstld.verisign-grs.com. 1673939245 1800 900 604800 86400\n"
          description: "Response of query from DNS server"
        timestamp:
          type: string
          example: "2023-01-17T10:23:22.779081Z"
          description: "Time at which this query will be send"
        in-custom-list:
          type: string
          example: "Yes"
          description: "`Yes` if this domain detected in custom-list else `No`"
    DGAApiResponse:
      properties:
        detected:
          type: string
          example: "Yes"
          description: "`Yes`,even if any one of domain detected in custom-list else `No`"
        detectedTime:
          type: integer
          format: int
          example: 52
          description: "Time in `seconds` at which detection happened"
        attackName:
          type: string
          example: "zloader"
          description: "Name of attack performed"  
        account:
          type: string
          example: "agowtham15@infoblox.site"
          description: "Account, against which attack was performed"
        clientID:
          type: string
          example: "4e279398acb278add12db3df557a81f8"
          description: "Client_id, against which attack was performed"
        deviceName:
          type: string    
          example: "B1E Endpoint For TI Detection"
          description: "Device_name"
        results:
          type : array
          items:
          $ref: '#/components/schemas/DGAQueriesResponse'
    DNSTQueriesResponse:
      properties: 
        queries:
          type: string
          example: "20537078706f51204f4e6757426d20636c64696d79206a7234756b.13.t7lomv.scr.83c39673c3.hansenandco.com."
          description: "Query to perform the attack"
        response:
          type: string
          example: ";; opcode: QUERY, status: NXDOMAIN, id: 0\n;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version 0; flags: ; udp: 4096\n\n;; QUESTION SECTION:\n;20537078706f51204f4e6757426d20636c64696d79206a7234756b.13.t7lomv.scr.83c39673c3.hansenandco.com.\tIN\t A\n\n;; AUTHORITY SECTION:\nhansenandco.com.\t1799\tIN\tSOA\tns1.hansenandco.com. root.hansenandco.com. 2019032101 3600 3600 3600 1800\n"
          description: "Response of query from DNS server"
        timestamp:
          type: string
          example: "2023-01-17T10:23:22.779081Z"
          description: "Time at which this query will be send"
    DNSTApiResponse:
      properties:
        detected:
          type: string
          example: "Yes"
          description: "`Yes`,even if any one of domain detected in custom-list else `No`"
        detectedTime:
          type: integer
          format: int
          example: 52
          description: "Time in `seconds` at which detection happened"
        attackName:
          type: string
          example: "text"
          description: "Name of attack performed"
        account:
          type: string 
          example: "agowtham15@infoblox.site"
          description: "Account, against which attack was performed"
        clientID:
          type: string
          example: "4e279398acb278add12db3df557a81f8"
          description: "Client_id, against which attack was performed"
        deviceName:
          type: string   
          example: "B1E Endpoint For TI Detection"
          description: "Device_name, against which attack was performed" 
        results:
          type : array
          items:
          $ref: '#/components/schemas/DNSTQueriesResponse'   